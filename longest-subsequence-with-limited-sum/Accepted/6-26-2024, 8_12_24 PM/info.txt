{"id":1300977347,"question_id":2469,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1719412944,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1300977347/","is_pending":"Not Pending","title":"Longest Subsequence With Limited Sum","memory":"16 MB","code":"class Solution {\npublic:\n    vector<int> answerQueries(vector<int>& nums, vector<int>& queries) {\n        int n = nums.size();\n        int m = queries.size();\n        sort(nums.begin(), nums.end());\n\n        // Calculate prefix sums\n        for (int i = 1; i < nums.size(); ++i) {\n            nums[i] += nums[i-1];\n        }\n\n        // Answer each query\n        vector<int> ans(m, 0); // answer vector with size m\n        for (int i = 0; i < m; ++i) {\n            int length = 0;\n            // Binary search lagao ji\n            int low = 0;\n            int hi = n - 1;\n            while (low <= hi) {\n                int mid = low + (hi - low) / 2;\n                if (nums[mid] > queries[i]) {\n                    hi = mid - 1;\n                } else {\n                    length = mid + 1;\n                    low = mid + 1;\n                }\n            }\n            ans[i] = length;\n        }\n        return ans;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subsequence-with-limited-sum","has_notes":false,"flag_type":1}