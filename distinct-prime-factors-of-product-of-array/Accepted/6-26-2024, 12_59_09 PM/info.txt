{"id":1300625180,"question_id":2609,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1719386949,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/1300625180/","is_pending":"Not Pending","title":"Distinct Prime Factors of Product of Array","memory":"21 MB","code":"class Solution {\npublic:\n    void fillarray(vector<bool> &array) {\n        int size = array.size() - 1;\n        for (int i = 2; i <= sqrt(size); i++) {\n            if (array[i]) {\n                for (int j = i * i; j <= size; j += i) {\n                    array[j] = false;\n                }\n            }\n        }\n    }\n\n    int distinctPrimeFactors(vector<int>& nums) {\n        if (nums.empty()) return 0;\n\n         int n=nums.size();\n        int mx=-1;\n        for(int i=0;i<n;i++){\n            mx=max(mx,nums[i]);\n        }\n        vector<bool> array(mx + 1, true);\n        if(mx+1>0) array[0]=0;\n        if(mx+1>1) array[1]=0;\n        fillarray(array);\n\n        vector<int> prime;\n        for (int i = 2; i <= mx; i++) {\n            if (array[i]) prime.push_back(i);\n        }\n\n        vector<bool> exist(prime.size(), false);\n        for (int i = 0; i < nums.size(); i++) {\n            int ele = nums[i];\n            for (int j = 0; j < prime.size(); j++) {\n                if (prime[j] > ele) break;\n                if (ele % prime[j] == 0) exist[j] = true;\n            }\n        }\n\n        int count = 0;\n        for (int i = 0; i < exist.size(); i++) {\n            if (exist[i]) count++;\n        }\n\n        return count;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"distinct-prime-factors-of-product-of-array","has_notes":false,"flag_type":1}