{"id":1300814105,"question_id":238,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1719401203,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1300814105/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"38.1 MB","code":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> pre(n);\n\n        // Calculate prefix array\n        int product = nums[0];\n        pre[0] = 1;\n        for (int i = 1; i < n; i++) {\n            pre[i] = product;\n            product *= nums[i];\n        }\n\n        // Calculate suffix array\n        // Reset product\n        product = nums[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            pre[i] *= product;\n            product *= nums[i];\n        }\n        return pre;\n    }\n};\n","compare_result":"111111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}