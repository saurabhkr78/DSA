{"id":1300809227,"question_id":238,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1719400836,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1300809227/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"40.1 MB","code":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        int n=nums.size();\n        vector<int>pre(n);\n        vector<int>suf(n);\n        vector<int>ans(n);\n        //for prefix array\n        int product=nums[0];\n        pre[0]=1;\n        for(int i=1;i<n;i++){\n            pre[i]=product;\n            product*=nums[i];\n        }\n        //for suffix array\n        // reset product\n        product=nums[n-1];\n        suf[n-1]=1;\n        for(int i=n-2;i>=0;i--){\n            suf[i]=product;\n            product*=nums[i];\n        }\n        //ans  into prefix array\n        for(int i=0;i<n;i++){\n            pre[i]=pre[i]*suf[i];\n        }\n        return pre;\n\n    }\n};\n","compare_result":"111111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}