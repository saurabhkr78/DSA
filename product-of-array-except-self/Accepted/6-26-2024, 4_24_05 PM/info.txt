{"id":1300788129,"question_id":238,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1719399245,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1300788129/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"38 MB","code":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        int product = 1;\n        int zero_count = 0;\n        for(int i=0; i < nums.size(); i++)\n        {\n            if(nums[i] != 0)\n            {\n                product *= nums[i];\n            }\n            else\n            {\n                zero_count++;\n            }\n            \n        }\n\n        for(int i=0; i < nums.size(); i++)\n        {\n            if(nums[i] != 0)\n            {\n                if(zero_count)\n                {\n                    nums[i] = 0;\n                }\n                else\n                {\n                    nums[i] = product/nums[i];\n                }\n            }\n            else\n            {\n                if(zero_count > 1)\n                {\n                    nums[i] = 0;\n                }\n                else\n                {\n                    nums[i] = product;\n\n                }\n                \n            }\n        }\n\n        return nums;\n    }\n};\n","compare_result":"111111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}