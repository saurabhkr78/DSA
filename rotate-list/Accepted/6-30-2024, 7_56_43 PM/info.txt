{"id":1304889034,"question_id":61,"lang":"cpp","lang_name":"C++","time":"3 days, 2 hours","timestamp":1719757603,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1304889034/","is_pending":"Not Pending","title":"Rotate List","memory":"15.2 MB","code":"/*find length of list\nif temp->next=NULL then tail=temp;\nk=k%length\nset temp at(n-k)th post by traversing\nconnect tail->next=head in order to connect LL tail with head\nnow,new head will be temp->next because LL head starts from here\nfinally make temp->next=Null to make it tail of LL\n*/\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(!head || !head->next) return head;\n        int n=0;\n        ListNode* temp=head;\n        ListNode* tail=NULL;\n\n        while(temp!=NULL){\n            if(temp->next==NULL) tail=temp;\n            n++;\n            temp=temp->next;\n        }\n        k=k%n;\n        if(k==0) return head;\n        temp=head;\n        for(int i=1;i<n-k;i++){\n            temp=temp->next;\n        }\n        tail->next=head;\n        head=temp->next;\n        temp->next=NULL;\n\n        return head;\n\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":true,"flag_type":1}