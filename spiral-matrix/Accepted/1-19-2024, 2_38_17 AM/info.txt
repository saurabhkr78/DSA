{"id":1150146697,"question_id":54,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1705612097,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1150146697/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"7.2 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        // to find row in 2D array\n        int m = matrix.size();\n        // to find col in 2D array\n        int n = matrix[0].size();\n        int minr = 0;\n        int minc = 0;\n        int maxr = m - 1;\n        int maxc = n - 1;\n        int ttn = n * m;\n        int count = 0;\n        vector<int> v;\n\n        while (minr <= maxr && minc <= maxc) {\n            // right printing row where row is fixed and col is being printed\n            for (int j = minc; j <= maxc && count < ttn; j++) {\n                v.push_back(matrix[minr][j]);\n                count++;\n            }\n            minr++;\n\n            // down printing where col is fixed and row is being printed\n            for (int i = minr; i <= maxr && count < ttn; i++) {\n                v.push_back(matrix[i][maxc]);\n                count++;\n            }\n            maxc--;\n\n            // left printing where row is fixed and column is being printed\n            for (int j = maxc; j >= minc && count < ttn; j--) {\n                v.push_back(matrix[maxr][j]);\n                count++;\n            }\n            maxr--;\n\n            // up printing where col is fixed and row is being printed\n            for (int i = maxr; i >= minr && count < ttn; i--) {\n                v.push_back(matrix[i][minc]);\n                count++;\n            }\n            minc++;\n        }\n        return v;\n    }\n};\n","compare_result":"1111111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}