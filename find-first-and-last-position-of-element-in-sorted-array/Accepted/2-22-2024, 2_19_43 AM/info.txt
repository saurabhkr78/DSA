{"id":1182384624,"question_id":34,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1708548583,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1182384624/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"16.1 MB","code":"class Solution {\npublic:\n    vector<int> searchRange(vector<int>& nums, int target) {\n        int n = nums.size();\n        int low = 0, high = n - 1;\n\n        // Initialize the result vector with -1\n        vector<int> result(2, -1);\n\n        // Find the first occurrence\n        while(low <= high){\n            int mid = low + (high - low) / 2;\n            if(nums[mid] == target){\n                if(mid == 0 || nums[mid - 1] != target){\n                    result[0] = mid;\n                    break;\n                } else {\n                    high = mid - 1;\n                }\n            } else if(nums[mid] < target){\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n\n        low = 0;\n        high = n - 1;\n\n        // Find the last occurrence\n        while(low <= high){\n            int mid = low + (high - low) / 2;\n            if(nums[mid] == target){\n                if(mid == n - 1 || nums[mid + 1] != target){\n                    result[1] = mid;\n                    break;\n                } else {\n                    low = mid + 1;\n                }\n            } else if(nums[mid] < target){\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n\n        return result;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}