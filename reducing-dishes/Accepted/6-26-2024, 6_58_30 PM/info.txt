{"id":1300911222,"question_id":1503,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1719408510,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1300911222/","is_pending":"Not Pending","title":"Reducing Dishes","memory":"10.4 MB","code":"class Solution {\npublic:\n    int maxSatisfaction(vector<int>& satisfaction) {\n       int n= satisfaction.size();\n       sort(satisfaction.begin(),satisfaction.end());\n        int suf[n];\n        suf[n-1]=satisfaction[n-1];\n        for(int i=n-2;i>=0;i--){\n            suf[i]=suf[i+1]+satisfaction[i];\n        }\n        // find the index \n      \n\n        int idx=-1;\n        for(int i=0;i<n;i++){\n            if(suf[i]>=0){\n                idx=i;\n                break;\n            }\n        }\n          if (idx==-1) return 0;\n        //max sum of like time \n        int time=1;\n        int sum=0;\n        for(int i=idx;i<n;i++){\n            sum+=(satisfaction[i]*time);\n            time++;\n        }\n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"reducing-dishes","has_notes":false,"flag_type":1}