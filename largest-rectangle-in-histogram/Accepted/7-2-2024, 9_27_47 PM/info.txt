{"id":1307250355,"question_id":84,"lang":"cpp","lang_name":"C++","time":"1 day, 1 hour","timestamp":1719935867,"status":10,"status_display":"Accepted","runtime":"125 ms","url":"/submissions/detail/1307250355/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"78.7 MB","code":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& arr) {\n        int size=arr.size();\n    /*..next greater element index..*/\n         stack<int> st;\n    //prev greater index array\n    int ans[size];\n    //make last element of array n bcoz next greater element than last element \n    ans[size-1]=size;\n    st.push(size-1);\n//initially push last element of array into stack\n\n    for (int i = size-2; i >=0; i--) {\n       //pop all the element smaller than arr[i] by comparing index\n       //maintaining a index of stack elements\n        while (st.size()>0 && arr[st.top()] >= arr[i]) st.pop(); \n        //marks the ans array\n        if(st.size()==0) ans[i]=size;\n        else ans[i]=st.top();\n        \n        //push [i] if arr\n        st.push(i);\n    }\n\n\n /*..previous smaller element index..*/\n    stack<int> st1;\n    int ans1[size];\n     \n    ans1[0]=-1;\n    st1.push(0);\n\n\n    for (int i = 1; i <size; i++) {\n      \n        while (st1.size()>0 && arr[st1.top()] >= arr[i]) st1.pop(); \n    \n        if(st1.size()==0) ans1[i]=-1;\n        else ans1[i]=st1.top();\n        \n        st1.push(i);\n    }\n    int maxArea=0;\n    for(int i=0;i<size;i++){\n    int area=arr[i]*(ans[i]-ans1[i]-1);\n    maxArea=max(maxArea,area);\n    }\n    return maxArea;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false,"flag_type":1}