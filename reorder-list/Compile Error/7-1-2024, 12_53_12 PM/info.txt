{"id":1305567254,"question_id":143,"lang":"cpp","lang_name":"C++","time":"2 days, 9 hours","timestamp":1719818592,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1305567254/","is_pending":"Not Pending","title":"Reorder List","memory":"N/A","code":"/*1.palindromeLL\n2.merger 2sorted array\n3.farzi node\n\n */\nclass Solution {\npublic:\n    void reorderList(ListNode* head) {\n        ListNode* slow=head;\n        ListNode* fast=head;\n        //right middle\n        // while(fast!=NULL&&fast->next!=NULL){\n        //     slow=slow->next;\n        //     fast=fast->next->next;\n        // }\n        //left middle\n         while(fast->next!=NULL&&fast->next->next!=NULL){\n            slow=slow->next;\n            fast=fast->next->next;\n            //now we to reverse slow->next\n            ListNode* b=reverse(slow->next);\n            //comarison using two pointer\n            ListNode* a=head;\n            slow->next=NULL;//for breakking the lists\n            //merger a and b alternstively\n            ListNode* =new ListNode(-1);\n            ListNode* tempC=temp;\n            ListNode* tempC=temp;\n\n\n    }\n};","compare_result":null,"title_slug":"reorder-list","has_notes":false,"flag_type":1}