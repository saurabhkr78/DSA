{"id":1161427597,"question_id":205,"lang":"cpp","lang_name":"C++","time":"5 months","timestamp":1706648639,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1161427597/","is_pending":"Not Pending","title":"Isomorphic Strings","memory":"8.4 MB","code":"class Solution {\npublic:\n    bool isIsomorphic(string s, string t) {\n        int m1[256] = {0}, m2[256] = {0}, n = s.size();\n        for (int i = 0; i < n; ++i) {\n            if (m1[s[i]] != m2[t[i]]) \n            return false;\n            /*The mapping is set to i + 1 (not just i) because the initial value in the mapping arrays is 0, and we need to distinguish between a character that hasn’t been seen yet and a character that was first seen at index 0.*/\n            m1[s[i]] = i + 1;\n            m2[t[i]] = i + 1;\n        }\n        return true;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111","title_slug":"isomorphic-strings","has_notes":false,"flag_type":1}