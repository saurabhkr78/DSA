{"id":1147038040,"question_id":31,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1705337432,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1147038040/","is_pending":"Not Pending","title":"Next Permutation","memory":"12.4 MB","code":"class Solution {\npublic:\n    void nextPermutation(vector<int>& nums) {\n        // 1.finding pivot\n        int n = nums.size();\n        int idx = -1;\n        for (int i = n - 2; i >= 0; i--) {\n            if (nums[i] < nums[i + 1]) {\n                idx = i;\n                break;\n            }\n        }\n        // if array is greatest\n        if (idx == -1) {\n\n            reverse(nums.begin(), nums.end());\n            return;\n        }\n        // 2.sorting/reverse after pivot\n        reverse(nums.begin() + idx + 1, nums.end());\n\n        // 3.finding just greatest index than pivot\n        int j = -1;\n        for (int i = idx + 1; i < n; i++) {\n            if (nums[i] > nums[idx]) {\n                j = i;\n                break;\n            }\n        }\n        // 4.swapping idx and j\n        int temp = nums[idx];\n        nums[idx] = nums[j];\n        nums[j] = temp;\n        return;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-permutation","has_notes":false,"flag_type":1}