{"id":1188416116,"question_id":658,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1709100027,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1188416116/","is_pending":"Not Pending","title":"Find K Closest Elements","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> findClosestElements(vector<int>& arr, int k, int x) {\n        vector<int>v(k);\n        /*\n        case1:element is  present then it is close to itself so insert it.\n             check L_R of that element by taking by at 0,n-1;\n             if |L-mid| ==|R-mid| && |L-mid|<|R-mid| then given condition a<b then pick Left(a) element\n        case2: if element is not present\n        case3:\n        if upper bound is out of index then insert k elements from upper bound \n        case4:\n         if lower bound is out of index then insert k elements from lower bound \n         case5:\n         if element<=num[0]\n\n\n         \n        */\n        \n        \n        \n       \n\n    }\n};","compare_result":null,"title_slug":"find-k-closest-elements","has_notes":false,"flag_type":1}