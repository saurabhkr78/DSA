{"id":1305253779,"question_id":23,"lang":"cpp","lang_name":"C++","time":"2 days, 17 hours","timestamp":1719791436,"status":10,"status_display":"Accepted","runtime":"118 ms","url":"/submissions/detail/1305253779/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"16.9 MB","code":"class Solution {\npublic:\n    ListNode* mergeLists(ListNode* list1, ListNode* list2) {\n        //farzi node approach\n      ListNode* c=new ListNode(-1);\n      ListNode* temp=c;\n      while(list1!=NULL&&list2!=NULL){\n        if(list1->val<=list2->val){\n            temp->next=list1;\n            list1=list1->next;\n            temp=temp->next;\n        }\n        else{\n            temp->next=list2;\n            list2=list2->next;\n            temp=temp->next;\n        }\n      } \n      if(list1==NULL)temp->next=list2;\n      else temp->next=list1;\n      return c->next;\n    }\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        if(lists.size()==0) return NULL;\n        while(lists.size()>1){\n            ListNode* a=lists[lists.size()-1];\n            lists.pop_back();\n            ListNode* b=lists[lists.size()-1];\n            lists.pop_back();\n            ListNode* c= mergeLists(a,b);\n            lists.push_back(c);\n        }\n        return lists[0];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}