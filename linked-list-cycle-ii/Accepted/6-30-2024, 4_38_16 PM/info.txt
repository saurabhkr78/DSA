{"id":1304746926,"question_id":142,"lang":"cpp","lang_name":"C++","time":"3 days, 6 hours","timestamp":1719745696,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1304746926/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"10.2 MB","code":"class Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n    ListNode* slow=head;\n    ListNode* fast=head;\n    bool flag=false;\n    while(fast!=NULL&&fast->next!=NULL){\n        slow=slow->next;\n        fast=fast->next->next;\n        if(slow==fast){\n            flag=true;\n            break;\n        }\n    }\n    if(flag==false) return NULL;\n    else{\n        ListNode* temp=head;\n       \n        while(temp!=slow){\n             slow=slow->next;\n            temp=temp->next;\n        }\n        return temp;\n\n    }\n    }\n    \n};","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":true,"flag_type":1}